<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Home Automation</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #121212;
            color: #ffffff;
            text-align: center;
            padding: 20px;
        }
        h2 { color: #00c8ff; }
        .container {
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: 20px;
        }
        .card {
            background: #000;
            padding: 20px;
            width: 90%;
            max-width: 400px;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 200, 255, 0.2);
            transition: background 0.3s;
        }
        .switch-container {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 10px;
        }
        .switch {
            position: relative;
            width: 50px;
            height: 25px;
        }
        .switch input {
            opacity: 0;
            width: 0;
            height: 0;
        }
        .slider {
            position: absolute;
            cursor: pointer;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: red;
            border-radius: 25px;
            transition: 0.3s;
        }
        .slider:before {
            position: absolute;
            content: "";
            height: 20px;
            width: 20px;
            left: 3px;
            bottom: 2.5px;
            background-color: white;
            border-radius: 50%;
            transition: 0.3s;
        }
        input:checked + .slider {
            background-color: green;
        }
        input:checked + .slider:before {
            transform: translateX(25px);
        }
        .slider-container {
            display: flex;
            flex-direction: column;
            align-items: center;
        }
        input[type="range"] {
            width: 100%;
            margin-top: 5px;
            opacity: 0.5;
            transition: opacity 0.3s;
        }
        input:disabled {
            opacity: 0.2;
        }
        .status-box {
            margin-top: 20px;
            padding: 10px;
            background: #1e1e1e;
            border-radius: 8px;
            width: 90%;
            max-width: 400px;
        }
    </style>
</head>
<body>

    <h2>Home Automation Control</h2>
    <div class="container">
        <!-- Load Cards -->
        <div id="load-container"></div>

        <!-- ESP32 Status -->
        <div class="status-box">
            <h3>ESP32 Status</h3>
            <p>Temperature: <span id="esp-temp">--</span>Â°C</p>
            <p>Voltage: <span id="esp-voltage">--</span>V</p>
        </div>
    </div>

    <script>
        const cloudAPI = "https://your-cloud-api.com/update"; // Replace with your cloud API
        const numLoads = 4;
        const loadContainer = document.getElementById("load-container");

        // Generate Load Cards
        for (let i = 1; i <= numLoads; i++) {
            loadContainer.innerHTML += `
                <div class="card" id="load${i}-card">
                    <div class="switch-container">
                        <span>Load ${i}</span>
                        <label class="switch">
                            <input type="checkbox" id="load${i}-switch" onchange="toggleLoad(${i})">
                            <span class="slider"></span>
                        </label>
                    </div>
                    <div class="slider-container">
                        <span>Voltage: <span id="load${i}-voltage">50</span>%</span>
                        <input type="range" id="load${i}-slider" min="0" max="100" value="50" oninput="updateVoltage(${i}, this.value)" disabled>
                    </div>
                </div>
            `;
        }

        function toggleLoad(loadNumber) {
            let switchElement = document.getElementById(`load${loadNumber}-switch`);
            let sliderElement = document.getElementById(`load${loadNumber}-slider`);
            let cardElement = document.getElementById(`load${loadNumber}-card`);
            let state = switchElement.checked ? "ON" : "OFF";

            // Change background color when switched ON
            cardElement.style.background = switchElement.checked ? "#005a8d" : "#000";

            // Enable/Disable voltage slider
            sliderElement.disabled = !switchElement.checked;

            // Send data to cloud
            fetch(`${cloudAPI}/load${loadNumber}/toggle`, {
                method: "POST",
                body: JSON.stringify({ state: state }),
                headers: { "Content-Type": "application/json" }
            }).catch(err => console.error("Error toggling load:", err));
        }

        function updateVoltage(loadNumber, value) {
            document.getElementById(`load${loadNumber}-voltage`).innerText = value;

            fetch(`${cloudAPI}/load${loadNumber}/voltage`, {
                method: "POST",
                body: JSON.stringify({ voltage: value }),
                headers: { "Content-Type": "application/json" }
            }).catch(err => console.error("Error updating voltage:", err));
        }

        function fetchRealTimeUpdates() {
            fetch(`${cloudAPI}/get-status`)
                .then(response => response.json())
                .then(data => {
                    for (let i = 1; i <= numLoads; i++) {
                        let switchElement = document.getElementById(`load${i}-switch`);
                        let sliderElement = document.getElementById(`load${i}-slider`);
                        let cardElement = document.getElementById(`load${i}-card`);

                        let isOn = data[`load${i}`].state === "ON";
                        switchElement.checked = isOn;
                        sliderElement.value = data[`load${i}`].voltage;
                        document.getElementById(`load${i}-voltage`).innerText = data[`load${i}`].voltage;
                        sliderElement.disabled = !isOn;
                        cardElement.style.background = isOn ? "#005a8d" : "#000";
                    }

                    document.getElementById("esp-temp").innerText = data.espTemperature;
                    document.getElementById("esp-voltage").innerText = data.espVoltage;
                })
                .catch(err => console.error("Error fetching real-time updates:", err));
        }

        setInterval(fetchRealTimeUpdates, 2000); // Update every 2 seconds
    </script>

</body>
</html>
